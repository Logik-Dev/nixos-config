version: "3"
vars:
  TMP: /tmp/homelab/keys
  ED25519: ssh_host_ed25519_key
  RSA: ssh_host_rsa_key

tasks:
  default:
    desc: List all available tasks
    silent: true
    cmds:
      - task --list-all

  launch-iot:
    internal: true
    cmds:
      - incus launch images:nixos/24.11 iot -p vlan21 -p ultra-30GiB -d eth0,hwaddr="BC:24:11:45:11:17" -c limits.cpu=1 -c limits.memory=4GiB -c security.nesting=true -c boot.autostart=true

  launch-dns:
    internal: true
    cmds:
      - incus launch images:nixos/24.05 dns -p vlan11 -p ultra-30GiB -d eth0,hwaddr="BC:24:11:45:11:53" -c limits.cpu=1 -c limits.memory=2GiB -c security.nesting=true -c boot.autostart=true

  launch-security:
    internal: true
    cmds:
      - incus launch images:nixos/24.05 security --vm -p vlan11 -p ultra-30GiB -d eth0,hwaddr="BC:24:11:45:11:58" -c limits.cpu=1 -c limits.memory=4GiB -c boot.autostart=true -c security.secureboot=false

  launch-borg:
    internal: true
    cmds:
      - incus launch images:nixos/24.05 borg -p vlan11 -p ultra-30GiB -p backups-folders -d eth0,hwaddr="BC:24:11:45:11:29" -c limits.cpu=1 -c limits.memory=4GiB -c security.nesting=true -c boot.autostart=true

  launch-medias:
    internal: true
    cmds:
      - incus launch images:nixos/24.05 medias -p vlan11 -p ultra-100GiB -p intel-gpu -p medias-shares -d eth0,hwaddr="BC:24:11:45:11:85" -c limits.cpu=2 -c limits.memory=8GiB -c security.nesting=true -c boot.autostart=true

  launch-docker:
    internal: true
    cmds:
      - incus launch images:nixos/24.05 docker --vm -p vlan11 -p ultra-30GiB  -p medias-shares -d eth0,hwaddr="BC:24:11:45:11:31" -c limits.cpu=2 -c limits.memory=8GiB -c security.secureboot=false -c boot.autostart=true

  launch-monitoring:
    internal: true
    cmds:
      - incus launch images:nixos/24.05 monitoring -p vlan11 -p ultra-100GiB -d eth0,hwaddr="BC:24:11:45:11:80" -c limits.cpu=2 -c limits.memory=8GiB -c security.nesting=true -c boot.autostart=true

  create-vm-*:
    desc: Create a nixos vm, copy ssh keys (host and authorized_keys) and rebuild
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - task: launch-{{.HOST}}
      - sleep 10
      - task: incus-copy-ssh-{{.HOST}}
      - task: rebuild-root-{{.HOST}}

  create-container-*:
    desc: Create a nixos container, copy ssh keys (host and authorized_keys) and rebuild configuration
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - task: launch-{{.HOST}}
      - task: incus-copy-ssh-{{.HOST}}
      - ssh root@{{.HOST}} "nixos-rebuild switch"
      - incus restart {{.HOST}}
      - task: rebuild-root-{{.HOST}}
      - incus restart {{.HOST}}

  incus-copy-ssh-*:
    internal: true
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - defer: rm -rf {{.TMP}}
      - mkdir -p {{.TMP}}
      - cp ./hosts/{{.HOST}}/keys/{{.ED25519}}.pub {{.TMP}}
      - cp ./hosts/{{.HOST}}/keys/{{.RSA}}.pub {{.TMP}}
      - pass homelab/hosts/{{.HOST}}/{{.ED25519}} > {{.TMP}}/{{.ED25519}}
      - pass homelab/hosts/{{.HOST}}/{{.RSA}} > {{.TMP}}/{{.RSA}}
      - incus file push {{.TMP}}/{{.RSA}} {{.HOST}}/etc/ssh/{{.RSA}} --uid=0 --gid=0 --mode=600
      - incus file push {{.TMP}}/{{.RSA}}.pub {{.HOST}}/etc/ssh/{{.RSA}}.pub --uid=0 --gid=0 --mode=660
      - incus file push {{.TMP}}/{{.ED25519}} {{.HOST}}/etc/ssh/{{.ED25519}} --uid=0 --gid=0 --mode=600
      - incus file push {{.TMP}}/{{.ED25519}}.pub {{.HOST}}/etc/ssh/{{.ED25519}}.pub --uid=0 --gid=0 --mode=660
      - incus file push ./hosts/sonicmaster/keys/id_ed25519.pub {{.HOST}}/root/.ssh/authorized_keys -p --uid=0 --gid=0 --mode=600

  gen-host-key-*:
    internal: true
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - defer: rm -rf {{.TMP}}
      - mkdir -p {{.TMP}}
      - mkdir -p ./hosts/{{.HOST}}/keys
      - ssh-keygen -q -N "" -t rsa -b 4096 -f {{.TMP}}/{{.RSA}}
      - ssh-keygen -q -N "" -t ed25519 -f {{.TMP}}/{{.ED25519}}
      - pass insert -m homelab/hosts/{{.HOST}}/{{.RSA}} < {{.TMP}}/{{.RSA}}
      - pass insert -m homelab/hosts/{{.HOST}}/{{.ED25519}} < {{.TMP}}/{{.ED25519}}
      - mv {{.TMP}}/{{.ED25519}}.pub ./hosts/{{.HOST}}/keys/{{.ED25519}}.pub
      - mv {{.TMP}}/{{.RSA}}.pub ./hosts/{{.HOST}}/keys/{{.RSA}}.pub
      - ssh-to-age -i ./hosts/{{.HOST}}/keys/{{.ED25519}}.pub -o ./hosts/{{.HOST}}/keys/age.pub
    preconditions:
      - sh: test ! -f ./hosts/{{.HOST}}/keys/{{.ED25519}}.pub
        msg: "{{.HOST}} already has {{.ED25519}}.pub"

  add-host-*:
    desc: Init ssh keys, folders and secrets for a new given host
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - mkdir -p ./hosts/{{.HOST}}
      - task: gen-host-key-{{.HOST}}
      - |
        cat > ./hosts/{{.HOST}}/.sops.yaml <<EOF
        creation_rules:
          - path_regex: ./secrets.yaml
            pgp: F5A34D392D22853E7EB1FA85AC259B4007CB7CE9
            age: $(cat ./hosts/{{.HOST}}/keys/age.pub)
        EOF
      - |
        echo '{...}: {}' > hosts/{{.HOST}}/nixos.nix
        echo '{...}: {}' > hosts/{{.HOST}}/hm.nix
      - |
        echo 'password: test' > secrets.yaml
      - sops --config ./hosts/{{.HOST}}/.sops.yaml -e -i secrets.yaml
      - mv secrets.yaml ./hosts/{{.HOST}}
      - key=$(cat ./hosts/{{.HOST}}/keys/age.pub) && echo "          - ${key}" >> ./hosts/common/.sops.yaml
      - sops --config ./hosts/common/.sops.yaml updatekeys ./hosts/common/secrets.yaml
    preconditions:
      - sh: test ! -d ./hosts/{{.HOST}}
        msg: "{{.HOST}} folder already exists, skipping..."

  rebuild-root-*:
    desc: Rebuild and switch configuration for targeted host as root
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - nixos-rebuild switch --target-host root@{{.HOST}} --flake .#{{.HOST}}

  rebuild-user-*:
    desc: Rebuild and switch configuration for targeted host as user
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - nixos-rebuild switch --target-host {{.HOST}} --flake .#{{.HOST}} --use-remote-sudo

  incus-register-*:
    desc: Register sonicmaster as client for incus
    vars:
      HOST: "{{ index .MATCH 0 }}"
    cmds:
      - incus remote add {{.HOST}} $(ssh {{.HOST}} 'incus config trust add sonicmaster' | tail -1)
