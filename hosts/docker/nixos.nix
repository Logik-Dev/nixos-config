{ pkgs, ... }:
{
  imports = [
    ./flaresolverr.nix
    ./gluetun.nix
    ./torrent.nix
  ];

  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

  virtualisation.oci-containers.backend = "podman";

  # Networks
  systemd.services."podman-network-seedbox_default" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f seedbox_default";
    };
    script = ''
      podman network inspect seedbox_default || podman network create seedbox_default
    '';
    partOf = [ "podman-compose-seedbox-root.target" ];
    wantedBy = [ "podman-compose-seedbox-root.target" ];
  };

  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-seedbox-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };

}
